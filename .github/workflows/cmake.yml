name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:

    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        npm view npm get version of @babel/plugin-proposal-private-property-in-object version command
        sudo apt-get update
        sudo apt install gcc-12 g++-12
        sudo apt-get install liblilv-dev libboost-dev libjack-jackd2-dev libnl-3-dev libnl-genl-3-dev libsystemd-dev catch
        sudo apt install libasound2-dev
        sudo apt install libwebsocketpp-dev authbind
        sudo apt install libsdbus-c++-dev libsdbus-c++-bin
        sudo apt install libavahi-client-dev libzip-dev libicu-dev apt google-perftools libgoogle-perftools-dev
        git submodule update --init --recursive 
        ./react-config

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      env:
           CC:   gcc-12
           CXX:  g++-12
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      env:
         CC:   gcc-12
         CXX:  g++-12
    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  # Execute CMake BuiltTest test
    #  run: ctest -C ${{env.BUILD_TYPE}} -R BuildTest
      
